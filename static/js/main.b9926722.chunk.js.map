{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Footer.js","App.js","index.js"],"names":["TodoItem","todo","destroy","toggle","editing","disableEditing","disableBlur","className","isCompleted","isEditing","type","onChange","checked","onDoubleClick","name","onClick","id","defaultValue","onKeyDown","e","onBlur","TodoList","todoList","toggleAll","filters","filter","every","item","htmlFor","map","Footer","switchFilter","deleteCompleted","length","Object","keys","href","toUpperCase","slice","completed","TODO_APP_STORAGE_KEY","App","useState","setTodoList","textInput","setTextInput","setFilter","useEffect","storagedTodoList","localStorage","getItem","JSON","parse","setItem","stringify","all","active","onTextInputChange","useCallback","target","value","checkKey","keyCode","trim","v4","newTodoList","todoToggle","prevState","placeholder","autoFocus","onKeyUp","todoEdit","todoDisE","todoBlur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9926722.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function TodoItem({ todo, destroy, toggle, editing, disableEditing, disableBlur}) {\r\n  return (\r\n    <li\r\n      className={`${todo.isCompleted ? \"completed\" : \" \"} ${todo.isEditing ? \"editing\" : \" \"}`}\r\n    >\r\n      <div className=\"view\">\r\n        <input\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          onChange={() => toggle(todo)}\r\n          checked={todo.isCompleted}\r\n        ></input>\r\n        <label onDoubleClick={() => editing(todo)}>{todo.name}</label>\r\n        <button className=\"destroy\" onClick={() => destroy(todo.id)}></button>\r\n      </div>\r\n      <input className=\"edit\" defaultValue={todo.name} onKeyDown={(e) => disableEditing(todo, e)} onBlur={(e) =>disableBlur(todo, e)}></input>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList({\r\n  todoList,\r\n  destroy,\r\n  toggle,\r\n  toggleAll,\r\n  editing,\r\n  disableEditing,\r\n  filters,\r\n  filter,\r\n  disableBlur,\r\n}) {\r\n  return (\r\n    <section className=\"main\">\r\n      <input\r\n        id=\"toggle-all\"\r\n        className=\"toggle-all\"\r\n        type=\"checkbox\"\r\n        onChange={() =>\r\n          toggleAll(todoList.every((item) => item.isCompleted === true))\r\n        }\r\n        checked={todoList.every((item) => item.isCompleted === true)}\r\n      ></input>\r\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n      <ul className=\"todo-list\">\r\n        {todoList.filter(filters[filter]).map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            destroy={destroy}\r\n            toggle={toggle}\r\n            editing={editing}\r\n            disableEditing={disableEditing}\r\n            disableBlur={disableBlur}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer({\r\n  todoList,\r\n  filters,\r\n  filter,\r\n  switchFilter,\r\n  deleteCompleted,\r\n}) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        <strong>{todoList.filter((todo) => !todo.isCompleted).length} </strong>\r\n        item left\r\n      </span>\r\n      <ul className=\"filters\">\r\n        {Object.keys(filters).map((type) => (\r\n          <li key={type} onClick={() => switchFilter(type)}>\r\n            <a\r\n              className={`${filter === type ? \"selected\" : \"\"}`}\r\n              href={`#/${type[0].toUpperCase() + type.slice(1)}`}\r\n            >\r\n              {type[0].toUpperCase() + type.slice(1)}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {todoList.filter(filters.completed).length > 0 && (\r\n        <button className=\"clear-completed\" onClick={() => deleteCompleted()}>\r\n          Clear completed\r\n        </button>\r\n      )}\r\n    </footer>\r\n  );\r\n}\r\n","import TodoList from \"./components/TodoList\";\nimport Footer from \"./components/Footer\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst TODO_APP_STORAGE_KEY = \"TODO_APP\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n\n  useEffect(() => {\n    const storagedTodoList = localStorage.getItem(TODO_APP_STORAGE_KEY);\n    if (storagedTodoList) {\n      setTodoList(JSON.parse(storagedTodoList));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(TODO_APP_STORAGE_KEY, JSON.stringify(todoList));\n  }, [todoList]);\n\n  const filters = {\n    all: () => true,\n    active: (todo) => !todo.isCompleted,\n    completed: (todo) => todo.isCompleted,\n  };\n\n  const onTextInputChange = useCallback((e) => {\n    setTextInput(e.target.value);\n  }, []);\n\n  const checkKey = useCallback(\n    (e) => {\n      if (e.keyCode === 13 && textInput.trim() !== '') {\n        setTodoList([\n          { id: v4(), name: textInput, isCompleted: false, isEditing: false },\n          ...todoList,\n        ]);\n        setTextInput(\"\");\n      }\n    },\n    [textInput, todoList]\n  );\n\n  const destroy = useCallback(\n    (id) => {\n      let newTodoList = todoList.filter((todo) => {\n        return todo.id !== id;\n      });\n      setTodoList(newTodoList);\n    },\n    [todoList]\n  );\n\n  const toggle = useCallback((todoToggle) => {\n    setTodoList((prevState) =>\n      prevState.map((todo) =>\n        todo === todoToggle\n          ? { ...todo, isCompleted: !todoToggle.isCompleted }\n          : todo\n      )\n    );\n  }, []);\n\n  const toggleAll = useCallback((checked) => {\n    setTodoList((prevState) =>\n      prevState.map((todo) => (todo = { ...todo, isCompleted: !checked }))\n    );\n  }, []);\n  const editing = (todoEdit) => {\n    setTodoList((prevState) =>\n      prevState.map((todo) =>\n        todo === todoEdit ? { ...todo, isEditing: true } : todo\n      )\n    );\n  };\n  const disableEditing = (todoDisE, e) => {\n    if (e.keyCode === 13 && e.target.value.trim() !== \"\") {\n      setTodoList((prevState) =>\n        prevState.map((todo) =>\n          todo === todoDisE\n            ? { ...todo, name: e.target.value, isEditing: false }\n            : todo\n        )\n      );\n    }\n    if (e.keyCode === 27) {\n      e.target.value = todoDisE.name\n      setTodoList((prevState) =>\n        prevState.map((todo) =>\n          todo === todoDisE ? { ...todo, isEditing: false } : todo\n        )\n      );\n    }\n  };\n  const disableBlur = (todoBlur, e) => {\n    if(e.target.value !== ''){\n    }\n    else{\n      e.target.value = todoBlur.name\n    }\n    setTodoList((prevState) =>\n      prevState.map((todo) =>\n        todo === todoBlur\n          ? { ...todo, name: e.target.value, isEditing: false }\n          : todo\n      )\n    );\n  };\n  const switchFilter = (type) => {\n    setFilter(type);\n  };\n  const deleteCompleted = () => {\n    setTodoList((prevState) =>\n      prevState.filter((todo) => {\n        return todo.isCompleted !== true;\n      })\n    );\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autoFocus\n          value={textInput}\n          onChange={onTextInputChange}\n          onKeyUp={checkKey}\n        ></input>\n      </header>\n      <TodoList\n        todoList={todoList}\n        destroy={destroy}\n        toggle={toggle}\n        toggleAll={toggleAll}\n        editing={editing}\n        disableEditing={disableEditing}\n        filters={filters}\n        filter={filter}\n        disableBlur={disableBlur}\n      />\n      <Footer\n        todoList={todoList}\n        filters={filters}\n        filter={filter}\n        switchFilter={switchFilter}\n        deleteCompleted={deleteCompleted}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}